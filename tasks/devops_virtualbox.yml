---

- name: virtualbox | elimina versiones viejas de virtualbox
  apt:
    name: "{{ virtualbox_old_packages_to_remove }}"
    state: absent
  become: true
  tags:
    - devops
    - virtualbox



- name: virtualbox | agrega clave del repo
  apt_key:
    url: 'https://www.virtualbox.org/download/oracle_vbox_2016.asc'
    id: 'B9F8D658297AF3EFC18D5CDFA2F683C52980AECF'
    state: present
  become: true
  tags:
    - devops
    - virtualbox

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_key_module.html
# The apt-key command has been deprecated and suggests to ‘manage keyring files in trusted.gpg.d instead’.
# sudo apt-key list | less 
# los ultimos 8 caracteres de la segunda linea son: 2980AECF
#sudo apt-key export 2980AECF | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/virtualbox.gpg
# FIXME: ver enlace manpage Ansible mas arriba


# FIXME: sudo apt-key export 2980AECF | sudo gpg --dearmour -o /usr/share/keyrings/virtualbox.gpg

- name: virtualbox | agrego repo
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/virtualbox.gpg] https://download.virtualbox.org/virtualbox/debian {{ ansible_distribution_release }} contrib"
    state: present
    update_cache: yes
    filename: virtualbox
  become: true
  register: reg_add_repo_vb
  tags:
    - devops
    - virtualbox


- name: virtualbox | actualizo lista paquetes .deb
  apt:
    update_cache: yes
  become: true
  when: reg_add_repo_vb is changed
  tags:
    - devops
    - virtualbox

- name: virtualbox | instala virtualbox
  apt:
    name: "{{ virtualbox_version_to_install }}"
    state: present
  become: true
  tags:
    - devops
    - virtualbox



- name: virtualbox | VirtualBox version
  shell: "VBoxManage --version | awk -F'[r_]' '{print $1}'"
  register: reg_virtualbox_version
  changed_when: false
  tags:
    - devops
    - virtualbox

- name: virtualbox | Check if extension pack is already installed
  shell: "VBoxManage list extpacks"
  register: reg_extpack_list
  changed_when: false
  tags:
    - devops
    - virtualbox

- set_fact:
    ext_pack_claves: "{{ reg_extpack_list.stdout_lines | map('regex_replace', '^(?P<clave>.+):[ ]*(?P<valor>.+)$', '\\g<clave>') | list }}"
    ext_pack_valores: "{{ reg_extpack_list.stdout_lines | map('regex_replace', '^(?P<clave>.+):[ ]*(?P<valor>.+)$', '\\g<valor>') | list }}"
  tags:
    - devops
    - virtualbox

- set_fact:
    ext_pack_info: "{{ dict(ext_pack_claves | zip(ext_pack_valores)) }}"
  tags:
    - devops
    - virtualbox

- debug: var=ext_pack_info
  tags:
    - devops
    - virtualbox

- name: virtualbox | Output installed extpacks
  debug:
    msg: "{{ ext_pack_info['Version'] if ext_pack_info['Extension Packs'] != '0' else 'No hay extpacks instalados' }}"
  tags:
    - devops
    - virtualbox

# LatestVirtualBoxVersion=$(wget -qO - http://download.virtualbox.org/virtualbox/LATEST-STABLE.TXT) && wget "http://download.virtualbox.org/virtualbox/${LatestVirtualBoxVersion}/Oracle_VM_VirtualBox_Extension_Pack-${LatestVirtualBoxVersion}.vbox-extpack"
- name: virtualbox | Download VirtualBox extension pack
  get_url:
    url: "https://download.virtualbox.org/virtualbox/{{ reg_virtualbox_version.stdout }}/Oracle_VM_VirtualBox_Extension_Pack-{{ reg_virtualbox_version.stdout }}.vbox-extpack"
    dest: /tmp/
    force: yes
    #checksum: "sha256:https://www.virtualbox.org/download/hashes/{{ reg_virtualbox_version.stdout }}/SHA256SUMS"
  register: reg_download_result
  when: 'reg_extpack_list.stdout == "Extension Packs: 0" or ext_pack_info["Version"] != reg_virtualbox_version.stdout'
  tags:
    - devops
    - virtualbox

- name: virtualbox | Output downloaded VirtualBox extension pack file name
  debug:
    var: reg_download_result.dest
    verbosity: 1
  tags:
    - devops
    - virtualbox

- name: virtualbox | Install VirtualBox extension pack
  shell: "echo 'y' | VBoxManage extpack install --replace {{ reg_download_result.dest }}"
  when: 'reg_extpack_list.stdout == "Extension Packs: 0" or ext_pack_info["Version"] != reg_virtualbox_version.stdout'
  become: true
  tags:
    - devops
    - virtualbox

- name: virtualbox | make sure kernel modules are loaded
  modprobe:
    name: "{{ item }}"
    state: present
  become: true
  with_items:
    - vboxnetadp
    - vboxnetflt
    - vboxdrv
  tags:
    - devops
    - virtualbox


